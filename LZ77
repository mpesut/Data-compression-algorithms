import time

MAX_WINDOW_SIZE = 400

LOOK_AHEAD_BUFFER_SIZE = 15

def find_last(buffer, a, first):
    index = -1
    for i in range(first, len(buffer)):
        if(buffer[i] == a):
            return i
    return index


def LZ77(data):
    codes = []
    buffer = []
    i = 0
    while i < len(data):
        p = find_last(buffer,data[i],0)
        duljina = 1
        pok = p
        while p != -1:
            l = 1
            for j in range(1,15):
                if(i+j < len(data) and p+j < len(buffer) and buffer[p+j] == data[i+j]):
                    l += 1
                else:
                    break     
            
            if(duljina <= l):
                duljina = l
                pok = p
            p = find_last(buffer,data[i],p+1)
        
        l = duljina
        p = pok 
        
        if(pok != -1 and l > 2):
            if(i + l < len(data)):
                codes.append([len(buffer) - p,l,data[i+l]])
            else:
                codes.append([len(buffer) - p,l,'<eof>'])
            for k in range(l+1):
                while len(buffer)+l > 400:
                    buffer.pop(0)
                if( i + k < len(data)):
                    buffer.append(data[i+k])
            i = i + l + 1
        else:
            if(l == 2): #dodajemo u codes, izlaz
                codes.append(data[i])
                codes.append(data[i+1])
            else:
                codes.append(data[i])
                
            while len(buffer)+l > 400:
                buffer.pop(0)
                
            buffer.append(data[i]) #povecavamo buffer, pomicemo
            
            if(l == 2):
                buffer.append(data[i+1])
                if(i+l < len(data)):
                    buffer.append(data[i+2])
                i = i + l
            i += 1
    return codes
